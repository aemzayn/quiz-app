{"version":3,"sources":["components/Answers.js","components/Category.js","api/index.js","views/Home.js","views/About.js","components/Navbar.js","components/Error404.js","App.js","index.js"],"names":["Answers","answers","checkAnswer","className","map","ans","key","onClick","he","decode","Category","categories","no","name","cat","value","fetchQuestions","category","difficulty","numberOfQuestion","a","axios","get","res","results","data","Home","state","questions","number","msg","score","isStarted","gameOver","allAnswers","handleStart","setState","incorrect_answers","correct_answer","shuffledAnswers","shuffleQuestion","handleRestart","i","length","j","Math","floor","random","temp","e","choosenAnswer","target","textContent","correctAnswer","classList","add","setTimeout","console","log","handleChange","id","this","startMenu","htmlFor","onChange","dif","toUpperCase","type","max","min","singleQuestion","question","finalScore","Component","About","href","withRouter","to","Error404","style","textAlign","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3a3654d0.chunk.js","sourcesContent":["import React from 'react'\r\nimport he from 'he'\r\n\r\nconst Answers = ({ answers, checkAnswer }) => {\r\n  return (\r\n    <div className=\"answers-container cols-4 cols-md-2 cols-sm-1\">\r\n      { answers ? (\r\n        answers.map(ans => {\r\n          return(\r\n            <div key={ans} className=\"col p-1\">\r\n              <button className=\"w-100\" onClick={checkAnswer}>{he.decode(ans)}</button>\r\n            </div>\r\n          )\r\n        })\r\n      ) : (\r\n        <h4 className=\"center\">Loading</h4>\r\n      ) }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Answers\r\n","import React from 'react'\r\n\r\nconst Category = () => {\r\n  const categories = [\r\n    {no: 9, name: 'General Knowledge'},\r\n    {no: 10, name: 'Entertainment: Books'},\r\n    {no: 11, name: 'Entertainment: Film'},\r\n    {no: 12, name: 'Entertainment: Music'},\r\n    {no: 14, name: 'Entertainment: Television'},\r\n    {no: 15, name: 'Entertainment: Video Games'},\r\n    {no: 16, name: 'Entertainment: Board Games'},\r\n    {no: 17, name: 'Science and Nature'},\r\n    {no: 18, name: 'Science: Computers'},\r\n    {no: 20, name: 'Mythology'},\r\n    {no: 21, name: 'Sports'},\r\n    {no: 22, name: 'Geography'},\r\n    {no: 23, name: 'History'},\r\n    {no: 26, name: 'Celebrities'},\r\n    {no: 27, name: 'Animals'},\r\n    {no: 28, name: 'Vehicles'},\r\n    {no: 31, name: 'Entertainment: Japanese Anime and Manga'},\r\n    {no: 32, name: 'Entertainment: Cartoon and Animations'},\r\n  ]\r\n  const options = categories ? (\r\n    categories.map(cat => {\r\n      return (\r\n        <option value={cat.no} key={cat.no}>{ cat.name }</option>\r\n      )\r\n    })\r\n  ) : (\r\n    <p>Loading...</p>\r\n  )\r\n\r\n  return options\r\n}\r\n\r\nexport default Category\r\n","import axios from 'axios'\r\n\r\nexport const fetchQuestions = async (category, difficulty, numberOfQuestion) => {\r\n  const res = await axios.get(`https://opentdb.com/api.php?amount=${numberOfQuestion}&category=${category}&difficulty=${difficulty}&type=multiple`)\r\n  const { results } = res.data\r\n  return results\r\n}","import React, { Component } from 'react'\r\nimport he from 'he'\r\nimport Answers from '../components/Answers'\r\nimport Category from '../components/Category'\r\nimport { fetchQuestions } from '../api'\r\n\r\nexport class Home extends Component {\r\n  state = {\r\n    category: 9,\r\n    numberOfQuestion: 10,\r\n    difficulty: 'easy',\r\n    questions: [],\r\n    number: 0,\r\n    msg: '',\r\n    score: 0,\r\n    isStarted: false,\r\n    gameOver: false,\r\n    allAnswers: []\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      number: 0,\r\n      score: 0,\r\n      isStarted: false,\r\n      gameOver: false,\r\n      allAnswers: []\r\n    })\r\n  }\r\n\r\n  handleStart = async() => {\r\n    const { category, difficulty, numberOfQuestion } = this.state\r\n    const data = await fetchQuestions(category, difficulty, numberOfQuestion)\r\n    this.setState({\r\n      questions: data,\r\n      gameOver: false,\r\n      allAnswers: []\r\n    })\r\n\r\n    // put original answers to state\r\n    this.setState({\r\n      allAnswers: [\r\n        ...this.state.questions[this.state.number].incorrect_answers,\r\n        this.state.questions[this.state.number].correct_answer\r\n      ]\r\n    })\r\n\r\n    //shuffle the answers and start the game\r\n    const shuffledAnswers = this.shuffleQuestion()\r\n    this.setState({\r\n      allAnswers: shuffledAnswers,\r\n      isStarted: true\r\n    })\r\n  }\r\n\r\n  handleRestart = () => {\r\n    this.setState({\r\n      category: 9,\r\n      numberOfQuestion: 10,\r\n      difficulty: 'easy',\r\n      questions: [],\r\n      number: 0,\r\n      msg: '',\r\n      score: 0,\r\n      isStarted: false,\r\n      gameOver: false,\r\n      allAnswers: []\r\n    })\r\n  }\r\n\r\n  shuffleQuestion = () => {\r\n    const allAnswers = this.state.allAnswers\r\n    if(allAnswers) {\r\n      for(let i = allAnswers.length - 1 ; i > 0 ; i--){\r\n        let j = Math.floor(Math.random() * (i + 1))\r\n        let temp = allAnswers[i]\r\n        allAnswers[i] = allAnswers[j]\r\n        allAnswers[j] = temp\r\n      }\r\n      return allAnswers\r\n    }\r\n    if(this.state.isStarted && !allAnswers){\r\n      this.setState({\r\n        gameOver: 0\r\n      })\r\n    }\r\n  }\r\n\r\n  checkAnswer = e => {\r\n    let choosenAnswer = e.target.textContent\r\n    let correctAnswer = this.state.questions[this.state.number].correct_answer\r\n    if(choosenAnswer === correctAnswer){\r\n      e.target.classList.add('correct')\r\n      this.setState({\r\n        score: this.state.score + 1,\r\n      })\r\n    } else {\r\n      e.target.classList.add('incorrect')\r\n      this.setState({\r\n        msg: `True answer is: ${correctAnswer}`\r\n      })\r\n    }\r\n\r\n    // getting next answers\r\n    setTimeout(() => {\r\n      if(!(this.state.number === (this.state.questions.length - 1))){\r\n        this.setState({\r\n          allAnswers: [\r\n            ...this.state.questions[this.state.number + 1].incorrect_answers,\r\n            this.state.questions[this.state.number + 1].correct_answer\r\n          ]\r\n        })\r\n      } else {\r\n        this.setState({\r\n          allAnswers: []\r\n        })\r\n      }\r\n    }, 700);\r\n\r\n    // shuffling the answers and puting them to state\r\n    setTimeout(() => {\r\n      const shuffledAnswers = this.shuffleQuestion()\r\n      this.setState({\r\n        allAnswers: shuffledAnswers\r\n      })\r\n      console.log('put back the answers')\r\n    }, 700);\r\n\r\n    // advancing to next question\r\n    setTimeout(() => {\r\n      this.setState({\r\n        number: this.state.number + 1,\r\n        msg: ''\r\n      })\r\n    }, 700);\r\n\r\n    // finishing the game\r\n    if(this.state.number === (this.state.questions.length - 1)){\r\n      setTimeout(() => {\r\n        this.setState({\r\n          gameOver: true\r\n        })\r\n      }, 700);\r\n    }\r\n  }\r\n\r\n  handleChange = e => {\r\n    const id = e.target.id\r\n    switch(id) {\r\n      case \"category\":\r\n        this.setState({\r\n          category: e.target.value\r\n        })\r\n        break\r\n      case \"difficulty\":\r\n        this.setState({\r\n          difficulty: e.target.value\r\n        })\r\n        break\r\n      case \"numberOfQuestion\":\r\n        this.setState({\r\n          numberOfQuestion: e.target.value\r\n        })\r\n        break\r\n      default:\r\n        break\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { questions, allAnswers, number, isStarted, gameOver, score, numberOfQuestion } = this.state\r\n    const difficulties = ['easy', 'medium', 'hard']\r\n\r\n    const startMenu = (!isStarted) && (\r\n      <div>\r\n        <h1>Welcome to Quizes</h1>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"category\">Select Category: </label>\r\n          <select onChange={this.handleChange} className=\"form-control\" name=\"Category\" id=\"category\">\r\n            <Category />\r\n          </select>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"difficulty\">Select Difficulty: </label>\r\n          <select onChange={this.handleChange} className=\"form-control\" name=\"difficulty\" id=\"difficulty\">\r\n            {difficulties.map(dif => {\r\n              return(\r\n                <option key={dif} value={dif}>{dif.toUpperCase()}</option>\r\n              )\r\n            })}\r\n          </select>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"numberOfQuestions\">Number of Questions</label>\r\n          <input\r\n            onChange={this.handleChange}\r\n            value={numberOfQuestion}\r\n            className=\"form-control\"\r\n            type=\"number\"\r\n            max=\"50\"\r\n            min=\"1\"\r\n            id=\"numberOfQuestion\"\r\n          />\r\n        </div>\r\n        <button onClick={this.handleStart} >Start Game</button>\r\n      </div>\r\n    )\r\n\r\n    // Showing the question\r\n    const singleQuestion = ((questions.length >= 0) && (number <= questions.length) && (allAnswers.length)) && (\r\n      <div>\r\n        <h4>Question: {number + 1} of {questions.length}</h4>\r\n        <div className=\"card\">\r\n          <div className=\"card-body\">\r\n            <h3>{he.decode(questions[number].question)}</h3>\r\n            <Answers checkAnswer={this.checkAnswer} answers={this.state.allAnswers} />\r\n          </div>\r\n          { this.state.msg && <h5 className=\"msg\">{ he.decode(this.state.msg) }</h5> }\r\n        </div>\r\n      </div>\r\n    )\r\n\r\n    const finalScore = (gameOver && (number == questions.length)) && (\r\n      <div className=\"center\">\r\n        <h4>Your score is: {score}</h4>\r\n        <button onClick={this.handleRestart}>Restart</button>\r\n      </div>\r\n    )\r\n\r\n    return (\r\n      <div className=\"home\">\r\n        { startMenu }\r\n        { singleQuestion ? singleQuestion : null } \r\n        { finalScore }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\n\r\nconst About = () => {\r\n  return (\r\n    <div className=\"container about\">\r\n      <h4 className=\"center\">About</h4>\r\n      <p>\r\n        Created by  <a href=\"https://github.com/aemzayn\">Ahmad Muslih Zain</a>\r\n      </p>\r\n      <p>\r\n        API from <a href=\"https://opentdb.com/\">https://opentdb.com/</a>\r\n      </p>\r\n      <p>Technology used:</p>\r\n      <ul className=\"tech\">\r\n        <li><a href=\"https:/reactjs.org/\">React Js</a></li>\r\n        <li><a href=\"https:/sass-lang.com/documentation/syntax\">SCSS</a></li>\r\n        <li><a href=\"https:/github.com/mathiasbynens/he\">HE</a></li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default About\r\n","import React from 'react'\r\nimport { NavLink, Link, withRouter } from 'react-router-dom'\r\n\r\nconst Navbar = () => {\r\n\r\n  return (\r\n    <div className=\"nav-container\">\r\n      <nav className=\"container navbar navbar-expand-lg\">\r\n      <div className=\"navbar-brand\">\r\n        <Link to=\"/\">QUIZ</Link>\r\n      </div>\r\n      <NavLink to=\"/about\">About</NavLink>\r\n      </nav>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withRouter(Navbar)\r\n\r\n\r\n","import React from 'react'\r\n\r\nconst Error404 = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className=\"center\">404 Not found</h1>\r\n      <p style={{textAlign: 'center'}}>You are nowhere</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Error404\r\n","import React, { Component } from 'react'\nimport { HashRouter, Switch, Route } from 'react-router-dom'\nimport Home from './views/Home'\nimport About from './views/About'\nimport Navbar from './components/Navbar'\nimport Error404 from './components/Error404'\n\nexport class App extends Component {\n  render() {\n    return (\n      <HashRouter>\n        <div className=\"app\">\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/about\" component={About} />\n            <Route path=\"*\" component={Error404} />\n          </Switch>\n        </div>\n      </HashRouter>\n    )\n  }\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.scss'\n\nReactDOM.render(<App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}